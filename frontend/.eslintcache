[{"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\index.js":"1","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\store.js":"2","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\App.js":"3","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\productReducers.js":"4","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\cartReducer.js":"5","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\userReducers.js":"6","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductScreen.js":"8","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Header.js":"9","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\HomeScreen.js":"10","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Footer.js":"11","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\CartScreen.js":"12","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ShippingScreen.js":"13","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\LoginScreen.js":"14","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\PlaceOrderScreen.js":"15","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\RegisterScreen.js":"16","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\PaymentScreen.js":"17","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProfileScreen.js":"18","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\OrderScreen.js":"19","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProdutListScreen.js":"20","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\UserEditScreen.js":"21","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\UserListScreen.js":"22","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\OrderListScreen.js":"23","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductReviewEditScreen.js":"24","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductEditScreen.js":"25","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Rating.js":"26","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Loader.js":"27","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Message.js":"28","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Meta.js":"29","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\SearchBox.js":"30","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\ProductCarousel.js":"31","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Product.js":"32","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\FormContainer.js":"33","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Paginate.js":"34","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\productConstants.js":"35","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\userConstants.js":"36","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\orderConstants.js":"37","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\cartConstants.js":"38","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\cartActions.js":"39","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\productActions.js":"40","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\orderActions.js":"41","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\userActions.js":"42","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\CheckoutSteps.js":"43","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\axios.js":"44"},{"size":328,"mtime":1615742948296,"results":"45","hashOfConfig":"46"},{"size":3094,"mtime":1615742948310,"results":"47","hashOfConfig":"46"},{"size":2982,"mtime":1615744269136,"results":"48","hashOfConfig":"46"},{"size":8741,"mtime":1615742948298,"results":"49","hashOfConfig":"46"},{"size":1476,"mtime":1615742948297,"results":"50","hashOfConfig":"46"},{"size":5172,"mtime":1615742948299,"results":"51","hashOfConfig":"46"},{"size":4900,"mtime":1615742948298,"results":"52","hashOfConfig":"46"},{"size":8428,"mtime":1615742948306,"results":"53","hashOfConfig":"46"},{"size":2668,"mtime":1615742948289,"results":"54","hashOfConfig":"46"},{"size":1840,"mtime":1615742948301,"results":"55","hashOfConfig":"46"},{"size":403,"mtime":1615742948288,"results":"56","hashOfConfig":"46"},{"size":4392,"mtime":1615742948300,"results":"57","hashOfConfig":"46"},{"size":2587,"mtime":1615742948308,"results":"58","hashOfConfig":"46"},{"size":2391,"mtime":1615742948301,"results":"59","hashOfConfig":"46"},{"size":7444,"mtime":1615742948304,"results":"60","hashOfConfig":"46"},{"size":3535,"mtime":1615742948308,"results":"61","hashOfConfig":"46"},{"size":3890,"mtime":1615742948304,"results":"62","hashOfConfig":"46"},{"size":6325,"mtime":1615742948307,"results":"63","hashOfConfig":"46"},{"size":11994,"mtime":1615742948303,"results":"64","hashOfConfig":"46"},{"size":5427,"mtime":1615744303761,"results":"65","hashOfConfig":"46"},{"size":3193,"mtime":1615742948309,"results":"66","hashOfConfig":"46"},{"size":3519,"mtime":1615742948309,"results":"67","hashOfConfig":"46"},{"size":3522,"mtime":1615742948302,"results":"68","hashOfConfig":"46"},{"size":3411,"mtime":1615742948305,"results":"69","hashOfConfig":"46"},{"size":6277,"mtime":1615745895656,"results":"70","hashOfConfig":"46"},{"size":1718,"mtime":1615742948292,"results":"71","hashOfConfig":"46"},{"size":383,"mtime":1615742948289,"results":"72","hashOfConfig":"46"},{"size":237,"mtime":1615742948289,"results":"73","hashOfConfig":"46"},{"size":443,"mtime":1615742948290,"results":"74","hashOfConfig":"46"},{"size":710,"mtime":1615742948293,"results":"75","hashOfConfig":"46"},{"size":1411,"mtime":1615742948292,"results":"76","hashOfConfig":"46"},{"size":1054,"mtime":1615742948291,"results":"77","hashOfConfig":"46"},{"size":330,"mtime":1615742948288,"results":"78","hashOfConfig":"46"},{"size":776,"mtime":1615742948291,"results":"79","hashOfConfig":"46"},{"size":2616,"mtime":1615742948295,"results":"80","hashOfConfig":"46"},{"size":1493,"mtime":1615742948295,"results":"81","hashOfConfig":"46"},{"size":1411,"mtime":1615742948294,"results":"82","hashOfConfig":"46"},{"size":272,"mtime":1615742948293,"results":"83","hashOfConfig":"46"},{"size":1719,"mtime":1615743392092,"results":"84","hashOfConfig":"46"},{"size":9984,"mtime":1615743401694,"results":"85","hashOfConfig":"46"},{"size":6508,"mtime":1615743395894,"results":"86","hashOfConfig":"46"},{"size":7126,"mtime":1615743406330,"results":"87","hashOfConfig":"46"},{"size":1242,"mtime":1615742948287,"results":"88","hashOfConfig":"46"},{"size":128,"mtime":1615743357208,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1cs3phy",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"181"},"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\index.js",[],["182","183"],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\store.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\App.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\cartReducer.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Header.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Footer.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\OrderScreen.js",["184","185","186"],"import React,{useState ,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button,Row,Col,ListGroup,Image,Card,Form} from 'react-bootstrap'\nimport {useSelector,useDispatch} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {getOrderDetails,payOrder,deliverOrder,cancelOrder} from '../actions/orderActions'\nimport {updateProductQuantity} from '../actions/productActions'\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET, ORDER_CANCEL_RESET } from '../constants/orderConstants'\nimport Meta from '../components/Meta'\nimport NumberFormat from 'react-number-format'\n\nconst OrderScreen = ({match,history}) => {\n\n    const [changeOrderStatus,setchangeOrderStatus] = useState('Ordered')\n    const orderId = match.params.id\n    const orderDetails = useSelector(state => state.orderDetails)\n    const {order,error,loading} = orderDetails\n    const dispatch = useDispatch()\n    \n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n    \n    useEffect(() => {\n        \n        if (!userInfo) {\n            history.push('/login')\n        }\n        if(!order || successPay || successDeliver){\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch({type: ORDER_DELIVER_RESET})\n            dispatch(getOrderDetails(orderId))\n        }\n        if(order){\n            setchangeOrderStatus(order.orderStatus)\n        }\n         \n    },[dispatch,order,successPay,successDeliver,history,userInfo])\n    \n    useEffect(() => {\n        dispatch(getOrderDetails(orderId))\n    },[orderId])\n\n    if(!loading){\n        const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc,item) => acc+item.price*item.qty,0))\n    }\n    const successPaymentHandler = () => {\n            const payMentResult = {\n                id: order._id,\n                status: 'PAID',\n                update_time: Date.now(),\n                email_address : order.user.email,\n            }\n        dispatch(payOrder(orderId,payMentResult))\n        dispatch(updateProductQuantity(order.orderItems))\n        dispatch({type: ORDER_PAY_RESET})\n        dispatch({type: ORDER_DELIVER_RESET})\n        dispatch(getOrderDetails(orderId))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order,changeOrderStatus))\n    }\n\n    const cancelOrderHandler = () => {\n        //console.log(\"Cancel order clicked:\",order._id);\n        dispatch(cancelOrder(order._id));\n        dispatch({type: ORDER_CANCEL_RESET})\n        dispatch(getOrderDetails(order._id))\n    }\n\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n        <>\n            <Meta title=\"All Orders\" />\n            <h1>Order {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong className=\"highlight\">NAME: </strong>{order.user.name}</p>\n                            <p><strong className=\"highlight\">EMAIL: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            <p>\n                                <strong className=\"highlight\">ADDRESS: </strong>\n                                {order.shippingAddress.address},{order.shippingAddress.city}{' '},\n                                {order.shippingAddress.postalCode},{' '}\n                                {order.shippingAddress.country}\n                            </p>\n                            {!order.isPaid ? <Message variant='info'> Order Status: Payment Pending</Message> : (\n                                <Message variant='info'>Order Status: {order.orderStatus}</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p><strong className=\"highlight\">METHOD: </strong>\n                            {order.paymentMethod}</p>\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : (\n                                <Message variant='danger'>Not Paid</Message>\n                            )}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty</Message>\n                            ) : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map( (item,index) => (\n                                        <ListGroup.Item key={index}> \n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x \n                                                    <NumberFormat className=\"noborder\" thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={item.price}/>\n                                                    = <NumberFormat className=\"noborder\" thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={(item.qty * item.price).toFixed(2)}/>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n\n                            )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n                <Col md={4} >\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                 <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                            <Row>\n                                <Col>Items</Col>\n                                <Col>\n                                        <NumberFormat className=\"noborder\" thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={order.itemsPrice}/>\n                                </Col>\n                            </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col><NumberFormat className=\"noborder\" thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={order.shippingPrice}/></Col>\n                                </Row>\n                            </ListGroup.Item>\n                            \n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>\n                                        <NumberFormat className=\"noborder\" thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={order.totalPrice}/>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>  \n                            {!order.isPaid && userInfo._id === order.user._id && (\n                                <ListGroup.Item>\n                                    {loadingPay && (<Loader />)}\n                                    <Button \n                                        className='btn btn-block'\n                                        onClick = {successPaymentHandler}>\n                                            Confirm Payment\n                                    </Button>\n                                </ListGroup.Item>\n                            ) }\n                            {!order.isDelivered && order.orderStatus!=='Delivered' && order.isCancelled == false && order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && (<Loader />)}\n                                    <Button \n                                        className='btn btn-block'\n                                        onClick = {cancelOrderHandler}>\n                                            Cancel Order\n                                    </Button>\n                                </ListGroup.Item>\n                            ) }\n                            {loadingDeliver && <Loader />}     \n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                order.isPaid && !order.isCancelled &&\n                                !order.isDelivered && (\n                                <>\n                                    <Form className=\"m-3\" onSubmit={deliverHandler}>\n                                    <Form.Group controlId=\"changeOrderStatus\">\n                                        <Form.Label>Select Order Status</Form.Label>\n                                        <Form.Control \n                                            as=\"select\" \n                                            custom\n                                            value={changeOrderStatus}\n                                            onChange={(e) => setchangeOrderStatus(e.target.value)}\n                                        >\n                                        <option value='Ordered'>Ordered</option>\n                                        <option value='Packed'>Packed</option>\n                                        <option value='Shipped'>Shipped</option>\n                                        <option value='Out For Delivery'>Out For Delivery</option>\n                                        <option value='Delivered'>Delivered</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Button\n                                        type='submit'\n                                        className='btn btn-block'\n                                       \n                                        >\n                                        Change Order Status\n                                        </Button>\n                                    </Form>\n                                    \n                                        \n                                    \n                                </>\n                                )\n                                \n                            }\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\n\nexport default OrderScreen\n","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProdutListScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductReviewEditScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Rating.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Loader.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Message.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Meta.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\SearchBox.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Product.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\FormContainer.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\Paginate.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\productConstants.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\cartActions.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\productActions.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\orderActions.js",["187"],"import{\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_CANCEL_FAIL,\n    ORDER_CANCEL_REQUEST,\n    ORDER_CANCEL_RESET,\n    ORDER_CANCEL_SUCCESS,\n} from '../constants/orderConstants'\nimport axios from '../axios'\n//CREATE A NEW ORDER\nexport const createOrder = (order) => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.post(\n            `/api/orders`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}    \n\n\n//GET DETAILS ABOUT A PARTICULAR ORDER\nexport const getOrderDetails = (id) => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.get(\n            `/api/orders/${id}`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}\n\n\n\n//PAYMENT FOR A PARTICULAR ORDER\nexport const payOrder = (orderId,paymentResult) => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}\n\n\n//LIST OF ALL THE ORDERS CREATED BY A USER.VIEWED BY USER\nexport const listMyOrders = () => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.get(\n            `/api/orders/myorders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}\n\n\n//LIST OF ALL THE ORDERS VIEWED BY ADMIN\nexport const listOrders = () => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}\n\n\n//MAKE THE ORDER DELIVERED,ACCESSED ONLY BY ADMIN\nexport const deliverOrder = (order,status) => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.put(\n            `/api/orders/${order._id}/deliver?status=${status}`, \n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}\n\n//CANCEL ORDER\nexport const cancelOrder = (orderId) => async (dispatch,getState) => {\n    try{\n        dispatch({\n            type: ORDER_CANCEL_REQUEST\n        })\n \n        const {userLogin : {userInfo}} = getState()\n\n        const config = {\n            headers: {\n                Authorization : `Bearer ${userInfo.token}`\n            },\n        }\n        const {data} = await axios.put(\n            `/api/orders/${orderId}/cancelorder`, \n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_CANCEL_SUCCESS,\n            payload: data\n        })\n        \n    }catch(error) {\n        dispatch({   \n            type:ORDER_CANCEL_FAIL,\n            payload: error.response && error.response.data.message ?\n                error.response.data.message : error.message\n        })\n    }\n}","D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Web Dev\\eKart-DBMS-based-Order-Management-System\\frontend\\src\\axios.js",[],["188","189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":44,"column":7,"nodeType":"196","endLine":44,"endColumn":66,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":48,"column":7,"nodeType":"196","endLine":48,"endColumn":16,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":189,"column":105,"nodeType":"202","messageId":"203","endLine":189,"endColumn":107},{"ruleId":"204","severity":1,"message":"205","line":22,"column":5,"nodeType":"206","messageId":"207","endLine":22,"endColumn":23},{"ruleId":"190","replacedBy":"208"},{"ruleId":"192","replacedBy":"209"},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orderId'. Either include it or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["213"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ORDER_CANCEL_RESET' is defined but never used.","Identifier","unusedVar",["210"],["211"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [dispatch, order, successPay, successDeliver, history, userInfo, orderId]",{"range":"218","text":"219"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"220","text":"221"},[1720,1779],"[dispatch, order, successPay, successDeliver, history, userInfo, orderId]",[1857,1866],"[dispatch, orderId]"]